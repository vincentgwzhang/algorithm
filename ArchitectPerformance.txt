前端负载均衡 CDN
js, css 尽量压缩
缓存图片，或者另外用图片服务器

NGINX

后台：
把一次查询做成 hash, 相同的查询在寄存在缓存里，可以是NoSQL, 可以是内存，在某个有效周期内，例如2S, 然后统一分发给在这段时间内的用户
数据库读写分离，然后利用自动发送 SQL 给镜像数据库
垂直分库，把数据库重要和不重要的表分离出来，或者
如果有客户已经进入填写卡号的话，那么就直接删除一个商品，当客户支付不成功的时候才加回去
把永恒结果的一律缓存
直接把商品放在分配好的服务器上，客户购买后直接返回告诉数据库

充分隔离逻辑，一些后台处理的逻辑利用 Queue system 进行隔离

Business
例如不同的票在不同的时段发放
Hytrix 分流

Security
防止 DOS, 一个 IP 只能有相隔很久的查询
设置 Google 软件防止刷单