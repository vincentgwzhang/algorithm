二叉搜索树（Binary Search Tree）又称二叉查找树或二叉排序树
特征：
(1)若任意节点的左子树不空,则左子树上所有结点的值均小于它的根结点的值;
(2)若任意节点的右子树不空,则右子树上所有结点的值均大于它的根结点的值;
(3)没有键值相等的节点。


=======================================================================================================================================
AVL树和红黑树都属于自平衡二叉树

AVL树（Adelson-Velsky and Landis Tree）是计算机科学中最早被发明的自平衡二叉查找树
In an AVL tree, the heights of the two child subtrees of any node differ by at most one;


红黑树是在普通二叉树上,对每个节点添加一个颜色属性形成的,需要同时满足一下五条性质
(1)节点是红色或者是黑色;
(2)根节点是黑色;
(3)每个叶节点(NIL 或空节点)是黑色;
(4)每个红色节点的两个子节点都是黑色的(也就是说不存在两个连续的红色节点);
(5)从任一节点到其没个叶节点的所有路径都包含相同数目的黑色节点。

区别:AVL 树需要保持平衡,但它的旋转太耗时,而红黑树就是一个没有 AVL 树那样平衡, 因此插入、删除效率会高于 AVL 树,而 AVL 树的查找效率显然高于红黑树。

=======================================================================================================================================