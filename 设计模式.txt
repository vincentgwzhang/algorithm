单例模式：Java.lang.Runtime
工厂模式（简单工厂、抽象工厂）：如Integer.valueOf，Class.forName等方法
观察者模式：当一个对象被修改时，则会自动通知依赖它的对象。观察者模式属于行为型模式。
外观模式：提供一个统一的接口，用来访问子系统中的一群接口，外观定义了一个高层的接口，让子系统更容易使用。
模版方法模式：定义了一个算法的骨架，而将一些步骤延迟到子类中，模版方法使得子类可以在不改变算法结构的情况下，重新定义算法的步骤。
状态模式：允许对象在内部状态改变时改变它的行为，对象看起来好像修改了它的类。
装饰器设计模式：（Decorator design pattern）被用于多个 Java IO 类中。

https://zhuanlan.zhihu.com/p/94767927